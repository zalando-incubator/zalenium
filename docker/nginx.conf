worker_processes  1;
error_log nginx_error.log;
events {
    worker_connections 1024;
}
http {
    client_max_body_size        {{nginxMaxBodySize}};
    proxy_connect_timeout       900s;
    proxy_send_timeout          900s;
    proxy_read_timeout          900s;
    send_timeout                900s;

    map $status $status_text {
        400 'Bad Request';
        401 'Unauthorized';
        403 'Forbidden';
        404 'Not Found';
        405 'Method Not Allowed';
        406 'Not Acceptable';
        413 'Payload Too Large';
        414 'URI Too Long';
        431 'Request Header Fields Too Large';
        500 'Internal Server Error';
        501 'Not Implemented';
        502 'Bad Gateway';
        503 'Service Unavailable';
        504 'Gateway Timeout';
    }

    server {
        listen 4444;

        satisfy any;
        allow 127.0.0.1;
        auth_basic_user_file        /home/seluser/.htpasswd;
        if (-f /home/seluser/.htpasswd) {
            set $auth_basic "Zalenium Protected Access";
        }
        if (!-f /home/seluser/.htpasswd) {
            set $auth_basic off;
        }
        auth_basic $auth_basic;

        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414
            415 416 417 418 421 422 423 424 426 428 429 431 451 500 501 502 503
            504 505 506 507 508 510 511 /error.html;

        location = /error.html {
            ssi on;
            internal;
            alias /home/seluser/error.html;
        }

        location  {{contextPath}}/ {
            rewrite  ^{{contextPath}}/(.*) /$1 break;
            # https://github.com/zalando/zalenium/issues/817
            proxy_set_header Authorization "";
            proxy_pass http://127.0.0.1:4445;
        }
        location {{contextPath}}/dashboard {
            # We want a relative redirect to work around reverse proxies infront of nginx
            return 301 $scheme://$http_host$request_uri/;
        }
        location {{contextPath}}/dashboard/ {
            alias   /home/seluser/videos/;
            include /etc/nginx/mime.types;
            index   dashboard.html;
        }

        location {{contextPath}}/dashboard/cleanup {
            proxy_pass http://127.0.0.1:4445/dashboard/cleanup;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        location {{contextPath}}/dashboard/information {
            proxy_pass http://127.0.0.1:4445/dashboard/information;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        location ~ ^{{contextPath}}/vnc/host/(.*)/port/(.*)/(.*)$ {
            auth_request {{contextPath}}/auth;
            proxy_pass http://$1:$2/$3;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        location ~ ^{{contextPath}}/proxy/(.*):(\d+)/websockify$ {
            auth_request {{contextPath}}/auth;
            proxy_http_version 1.1;
            proxy_pass http://$1:$2/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # VNC connection timeout
            proxy_read_timeout 61s;

            # Disable cache
            proxy_buffering off;
        }
        location {{contextPath}}/auth {
            internal;
            proxy_pass http://127.0.0.1:4445/vnc/auth;
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
        }
    }
}
